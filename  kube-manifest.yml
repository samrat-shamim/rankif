apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose.exe convert -o kube-manifest.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: graphql
    name: graphql
  spec:
    type: LoadBalancer
    ports:
    - port: 80
    selector:
      io.kompose.service: graphql
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose.exe convert -o kube-manifest.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: postgres-db
    name: postgres-db
  spec:
    ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
    selector:
      io.kompose.service: postgres-db
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose.exe convert -o kube-manifest.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: prisma
    name: prisma
  spec:
    ports:
    - name: "4466"
      port: 4466
      targetPort: 4466
    selector:
      io.kompose.service: prisma
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose.exe convert -o kube-manifest.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: graphql
    name: graphql
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: graphql
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose.exe convert -o kube-manifest.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: graphql
      spec:
        containers:
        - image: rankif.azurecr.io/graphql
          imagePullPolicy: ""
          name: graphqlapp
          ports:
          - containerPort: 80
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose.exe convert -o kube-manifest.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: postgres-db
    name: postgres-db
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: postgres-db
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kompose.cmd: kompose.exe convert -o kube-manifest.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: postgres-db
      spec:
        containers:
        - env:
          - name: POSTGRES_PASSWORD
            value: "12345"
          - name: POSTGRES_USER
            value: postgres
          image: postgres:10.3
          imagePullPolicy: ""
          name: postgres-db
          ports:
          - containerPort: 5432
          resources: {}
          volumeMounts:
          - mountPath: /data/postgres
            name: postgres-db-claim0
        restartPolicy: Always
        serviceAccountName: ""
        volumes:
        - name: postgres-db-claim0
          persistentVolumeClaim:
            claimName: postgres-db-claim0
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: postgres-db-claim0
    name: postgres-db-claim0
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose.exe convert -o kube-manifest.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: prisma
    name: prisma
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: prisma
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose.exe convert -o kube-manifest.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: prisma
      spec:
        containers:
        - env:
          - name: PRISMA_CONFIG
            value: |
              port: 4466
              databases:
                default:
                  connector: postgres
                  host: postgres-db
                  port: 5432
                  user: postgres
                  password: 12345
          image: prismagraphql/prisma:1.34
          imagePullPolicy: ""
          name: prisma
          ports:
          - containerPort: 4466
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
kind: List
metadata: {}

